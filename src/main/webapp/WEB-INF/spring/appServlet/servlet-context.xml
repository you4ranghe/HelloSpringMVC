<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.test.jueun" />
	
	<!-- 새로운 pojo를 스프링 bean으로 등록하기 -->
	<!-- @autouwird사용하지않고 이렇게 등록 property나오면 setter 네임 찾으면된다 -->
<!-- 	<beans:bean id="test1" class="com.test.jueun.BeanTest">
		<beans:property name="name" value="김주은test1"></beans:property>
	</beans:bean>
	<beans:bean id="test2" class="com.test.jueun.BeanTest">
		<beans:property name="name" value="김주은test2"></beans:property>
	</beans:bean>
	
	생성자를 이용해서  bean을 생성하게 하는 방법
	<beans:bean id="test3" class="com.test.jueun.BeanTest">
		<beans:constructor-arg name="name" value="생성자를 이용한 test3"></beans:constructor-arg>
	</beans:bean>
	index="0" 을 사용해도 되고 name="name"해도 된다 -->
	
	
	
</beans:beans>
